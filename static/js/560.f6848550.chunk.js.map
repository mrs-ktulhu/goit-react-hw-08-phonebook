{"version":3,"file":"static/js/560.f6848550.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  .error {\n    padding: 20px;\n    font-size: 24px;\n    border: 1px solid black;\n    background-color: red;\n    color: white;\n  }\n\n  .header-link {\n    color: black;\n    display: inline-block;\n    padding: 20px;\n    font-size: 22px;\n    text-decoration: none;\n    margin-right: 15px;\n\n    transition: all 0.3s;\n\n    &.hover,\n    &.focus {\n      text-decoration: line-through double;\n      color: black;\n    }\n\n    &.active {\n      color: #c90e97;\n    }\n  }\n  .header-container {\n    margin: 0 auto;\n    -webkit-box-shadow: 0px 6px 5px 0px rgba(0, 0, 0, 0.17);\n    -moz-box-shadow: 0px 6px 5px 0px rgba(0, 0, 0, 0.17);\n    box-shadow: 0px 6px 5px 0px rgba(0, 0, 0, 0.17);\n  }\n\n  .goBack {\n    margin-bottom: 10px;\n  }\n`;\n","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n  display: inline-flex;\n  align-items:center;\n  flex-direction: column;\n  border: solid 1px black;\n  padding: 15px;\n  width: 300px;\n`;\n\nexport const FormInput = styled.label`\n  display: contents;\n  input {\n    margin: 5px 0 15px 0;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  cursor: pointer;\n  width:100%;\n`;","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsSlice';\nimport Notiflix from 'notiflix';\nimport { Container, FormInput, SubmitButton } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contactsSelector = useSelector(state => state.contacts);\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n\n      const form = e.target;\n      const name = form.elements.name.value;\n      const number = form.elements.number.value;\n\n      if (contactsSelector.items.find(contact => contact.name === name)) {\n        Notiflix.Notify.failure(`${name} is already in contacts.`);\n        return;\n      }\n\n      dispatch(addContact({ name, number }));\n      form.reset();\n    },\n    [contactsSelector.items, dispatch]\n  );\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <FormInput>\n          Name\n          <br />\n          <input\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            required\n          />\n        </FormInput>\n        <br />\n        <FormInput>\n          Phone\n          <br />\n          <input\n            type=\"tel\"\n            placeholder=\"Enter phone\"\n            name=\"number\"\n            required\n          />\n        </FormInput>\n        <br />\n        <SubmitButton type=\"submit\" >Add contact</SubmitButton>\n      </form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled'\n\nexport const ContactsList = styled.ul`\nmargin-top: 20px;\nli {\n  margin-bottom: 10px;\n  list-style:none;\n}\n`\nexport const DeleteButton = styled.button`\n  cursor: pointer;\n  margin-left: 5px;\n`\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsSlice';\nimport { DeleteButton } from './ContactList.styled';\n\nconst ContactListItem = ({ id, text, phone }) => {\n  const dispatch = useDispatch();\n  return (\n    <li>\n      <span role=\"img\" aria-label=\"Contact icon\">\n      ðŸ‘¤\n      </span>\n      <span>{text}</span>:&nbsp;\n      <span>{phone}</span>&nbsp;\n      <DeleteButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </DeleteButton>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts,deleteContact } from 'redux/contactsSlice';\nimport ContactListItem from './ContactListItem';\nimport { ContactsList } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter.value);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const isFiltered = filter !== '';\n  const hasContacts = filteredContacts.length > 0;\n\n  return (\n    <div>\n      {hasContacts ? (\n        <ContactsList>\n          {filteredContacts.map(contact => (\n            <ContactListItem\n              key={contact.id}\n              id={contact.id}\n              text={contact.name}\n              phone={contact.number}\n              onDelete={handleDelete}\n            />\n          ))}\n        </ContactsList>\n      ) : (\n        isFiltered && <p>No contacts found</p>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled'\n\nexport const FilterWrap = styled.label`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\ninput {\n  margin-top: 10px;\n}\n`\n","import React from 'react';\nimport { FilterWrap } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = filter => {\n    dispatch(setFilter(filter));\n  };\n  const changeFilterValue = e => {\n    handleFilterChange(e.currentTarget.value);\n  };\n\n  return (\n    <FilterWrap>\n      Find contacts by name\n      <input type=\"text\" onChange={changeFilterValue} size=\"20\" />\n    </FilterWrap>\n  );\n};\nexport default Filter;\n","import { Wrap } from 'components/App.styled';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactsSlice';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrap>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList/>\n    </Wrap>\n  );\n}\nexport default Contacts;"],"names":["Wrap","styled","_templateObject","_taggedTemplateLiteral","Container","FormInput","_templateObject2","SubmitButton","_templateObject3","dispatch","useDispatch","contactsSelector","useSelector","state","contacts","handleSubmit","useCallback","e","preventDefault","form","target","name","elements","value","number","items","find","contact","Notiflix","concat","addContact","reset","_jsx","children","_jsxs","onSubmit","type","placeholder","required","ContactsList","DeleteButton","_ref","id","text","phone","role","onClick","deleteContact","filter","useEffect","fetchContacts","handleDelete","contactId","filteredContacts","toLowerCase","includes","isFiltered","hasContacts","length","map","ContactListItem","onDelete","FilterWrap","onChange","currentTarget","setFilter","size","ContactForm","Filter","ContactList"],"sourceRoot":""}